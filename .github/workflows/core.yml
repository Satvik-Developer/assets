name: Core

on: 
  workflow_dispatch:

jobs:
  core_run:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget unzip docker.io

          if [ ! -f cloudflared-linux-amd64.deb ]; then
            wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          fi

          sudo dpkg-divert --local --rename --add /usr/bin/mandb
          echo -e '#!/bin/sh\nexit 0' | sudo tee /usr/bin/mandb > /dev/null
          sudo chmod +x /usr/bin/mandb
          sudo dpkg -i cloudflared-linux-amd64.deb

          curl https://rclone.org/install.sh | sudo bash

      - name: Setup Rclone
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONF }}" > ~/.config/rclone/rclone.conf

      - name: Pull Navidrome Image
        run: |
          docker pull deluan/navidrome:latest

      - name: Run Navidrome
        run: |
          mkdir -p ./navidrome-data ./navidrome-music
          docker run -d --name navidrome \
            -v $(pwd)/navidrome-data:/data \
            -v $(pwd)/navidrome-music:/music \
            -e ND_LOGLEVEL=info \
            -e ND_SCANINTERVAL=1m \
            -p 4533:4533 \
            deluan/navidrome:latest
          
          sleep 3
          nohup cloudflared tunnel run --token ${{ secrets.CF_TOKEN }} > cf.log 2>&1 &

      - name: Keep it alive + Backup at timeout
        run: |
          echo "Timer started"
          TIME=0
          INTERVAL=60  # seconds
          LIMIT=17940  # 4h59m to avoid hard 5h timeout

          while [ $TIME -lt $LIMIT ]; do
            sleep $INTERVAL
            TIME=$((TIME+INTERVAL))
            echo "Uptime: $((TIME/60)) minutes"
          done

          echo "==> Time limit reached. Backing up Navidrome..."

          docker stop navidrome
          docker rm navidrome

          tar -czvf navidrome-backup.tar.gz -C ./navidrome-data . -C ./navidrome-music .

          echo "==> Uploading backup to MEGA"
          rclone copy navidrome-backup.tar.gz mega:navidrome-backups/

          echo "==> Triggering next workflow..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/core.yml/dispatches \
            -d '{"ref":"main"}'
          echo "==> All done. Navidrome out."
