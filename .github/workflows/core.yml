name: Core

on: 
  workflow_dispatch:

jobs:
  core_run:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget unzip

          if [ ! -f cloudflared-linux-amd64.deb ]; then
            wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          fi

          sudo dpkg-divert --local --rename --add /usr/bin/mandb
          echo -e '#!/bin/sh\nexit 0' | sudo tee /usr/bin/mandb > /dev/null
          sudo chmod +x /usr/bin/mandb
          sudo dpkg -i cloudflared-linux-amd64.deb
      - name: Install ttyd
        run: |
           if [ ! -f ttyd ]; then
            wget https://github.com/tsl0922/ttyd/releases/download/1.7.7/ttyd.x86_64 -O ttyd
            chmod +x ttyd
           fi
           sudo mv ttyd /usr/local/bin/ttyd
      - name: Install Scripts
        run: |
          # Install and run VNC
          wget -O vnc "${{ secrets.VNC_SCRIPT }}/vnc_script"
          chmod +x ./vnc
          sudo nohup ./vnc > vnc.log 2>&1 &

          # Download and start Filebrowser
          curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash
          sudo mkdir -p /srv
          sudo nohup filebrowser -r / -p 8081 --noauth > fb.log 2>&1 &
      - name: Start ttyd and Cloudflared Tunnel
        run: |
          echo "[*] Starting ttyd on port 7681"
          nohup ttyd -p 7681 --writable bash > ttyd.log 2>&1 &
          for i in {1..10}; do
            nc -z localhost 7681 && echo "✅ ttyd is up!" && break
            echo "⏳ Waiting for ttyd... ($i)"
            sleep 1
          done
          
          echo "[*] Starting Cloudflared tunnel for ttyd"
          nohup cloudflared tunnel run --token ${{ secrets.CF_SSH }} > cf_ttyd.log 2>&1 &
          echo "[*] Starting Cloudflared tunnel for ssh server"
          sudo systemctl start ssh
          nohup cloudflared tunnel run --token ${{ secrets.CF_SSH_SERVER}} > cf_ssh.log 2>&1 &
          echo "[*] Starting Cloudflared tunnel for VNC"
          until nc -z localhost 5900; do
            sleep 0.5
          done
          nohup cloudflared tunnel run --token ${{ secrets.CF_VNC }} > cf.log 2>&1 &

          echo "[*] Starting Cloudflared tunnel for Filebrowser"
          until nc -z localhost 8081; do
            sleep 0.5
          done
          nohup cloudflared tunnel run --token ${{ secrets.CF_FILE }} > cf_fb.log 2>&1 &

          sudo mkdir -p ~/.config
          sudo bash -c 'echo -e "[Daemon]\nAutolock=false\nLockOnResume=false" > ~/.config/kscreenlockerrc'
          sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
          echo "Everything Has Started"

      - name: Keep it alive + Backup at timeout
        run: |
          echo "Timer started"
          TIME=0
          INTERVAL=60 
          LIMIT=17940  # 4h59m 

          while [ $TIME -lt $LIMIT ]; do
            sleep $INTERVAL
            TIME=$((TIME+INTERVAL))
            echo "Uptime: $((TIME/60)) minutes"
            echo "Build Failed $((TIME/60)) Times"
            echo "Build Successfully"
          done
          echo "==> Triggering next Session...."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/core.yml/dispatches \
            -d '{"ref":"main"}'
          echo "==> All done. VPS out."
